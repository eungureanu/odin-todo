(()=>{"use strict";var t={735:(t,e,n)=>{n.d(e,{Z:()=>a});var o=n(537),i=n.n(o),r=n(645),d=n.n(r)()(i());d.push([t.id,":root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    margin: 10px 20px;\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}","",{version:3,sources:["webpack://./src/styling.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,oCAAoC;IACpC,oCAAoC;EACtC;;AAEF;IACI,SAAS;IACT,UAAU;IACV,8BAA8B;IAC9B,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,8CAA8C;IAC9C,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,uBAAuB;IACvB,WAAW;IACX,eAAe;IACf,QAAQ;IACR,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,UAAU;IACV,kCAAkC;IAClC,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,mCAAmC;IACnC,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,WAAW;AACf",sourcesContent:[":root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    margin: 10px 20px;\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}"],sourceRoot:""}]);const a=d},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(d[s]=!0)}for(var A=0;A<t.length;A++){var c=[].concat(t[A]);o&&d[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},d=[],a=0;a<t.length;a++){var s=t[a],A=o.base?s[0]+o.base:s[0],c=r[A]||0,l="".concat(A," ").concat(c);r[A]=c+1;var p=n(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=i(u,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:h,references:1})}d.push(l)}return d}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var d=0;d<r.length;d++){var a=n(r[d]);e[a].references--}for(var s=o(t,i),A=0;A<r.length;A++){var c=n(r[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),i=n.n(o),r=n(569),d=n.n(r),a=n(565),s=n.n(a),A=n(216),c=n.n(A),l=n(589),p=n.n(l),u=n(735),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=d().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class m{constructor(t,e,n,o,i,r){this.id=t,this.title=e,this.details=n,this.duedate=o,this.priority=i,this.category="To Do",this.isDone=!1}}class f{constructor(){this.todoList=[],this.id=1,this.owner="Emma"}createTodo(t,e,n,o,i){return this.todoList.push(new m(this.id,t,e,n,o,i)),this.id++,this.todoList}updateTodo(t,e,n){return this.todoList.map((o=>{o.id==t&&(o[e]=n)})),this.todoList}deleteTodo(t){return this.todoList=this.todoList.filter((e=>e.id!==t)),this.todoList}}const C=new f;new class{constructor(){this.todoListInstance=new f,this.todoList=document.getElementById("todo-list"),this.addTodoButton=document.getElementById("add-todo-button"),this.modal=document.getElementById("modal"),this.overlay=document.getElementById("overlay"),this.submitTodo=document.getElementById("submit-todo"),this.cancel=document.getElementById("cancel"),this.formNewTodo=document.getElementById("form-body"),this.addTodoButton.addEventListener("click",(()=>this.openModal())),this.cancel.addEventListener("click",(()=>this.closeModal())),this.submitTodo.addEventListener("click",(()=>{this.formTitle=document.getElementById("title").value,this.formDetails=document.getElementById("description").value,this.formDueDate=document.getElementById("due-date").value,this.formPriority=document.getElementById("prio").value,this.formCategory=document.getElementById("category").value,this.currentTodos=this.todoListInstance.createTodo(this.formTitle,this.formDetails,this.formDueDate,this.formPriority,this.formCategory),this.renderDashboard(this.currentTodos),this.closeModal()}))}openModal(){this.modal.classList.add("active"),this.overlay.classList.add("active")}closeModal(){this.formNewTodo.reset(),this.modal.classList.remove("active"),this.overlay.classList.remove("active")}createCard(t){return this.todoCard=document.createElement("div"),this.todoStatus=document.createElement("input"),this.todoTitle=document.createElement("div"),this.todoDetails=document.createElement("div"),this.todoDue=document.createElement("div"),this.todoPrio=document.createElement("div"),this.todoEdit=document.createElement("button"),this.todoDelete=document.createElement("button"),this.todoList.appendChild(this.todoCard),this.todoCard.append(this.todoStatus,this.todoTitle,this.todoDetails,this.todoDue,this.todoPrio,this.todoEdit,this.todoDelete),this.todoCard.classList.add("item-card"),this.todoCard.setAttribute("id",t.id),this.todoStatus.type="checkbox",this.todoTitle.classList.add("todo-title"),this.todoTitle.innerText=t.title,this.todoDetails.classList.add("todo-details"),this.todoDetails.innerText=t.details,this.todoDue.classList.add("todo-due"),this.todoDue.innerText="Due date: "+t.duedate,this.todoPrio.classList.add("todo-prio"),this.todoPrio.innerText="Priority: "+t.priority,this.todoEdit.classList.add("todo-edit"),this.todoEdit.innerText="Edit",this.todoDelete.classList.add("todo-delete"),this.todoDelete.innerText="Delete",this.todoCard}renderDashboard(t){this.todoList.innerHTML="",t.forEach((t=>{this.todoCard=this.createCard(t),this.todoList.appendChild(this.todoCard)}))}},C.createTodo("Finish Project Proposal","Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor.","2023-08-15","High","To Do"),C.createTodo("Buy Groceries","Purchase vegetables, fruits, and other essentials for the week.","2023-08-10","Medium","To Do"),C.updateTodo(2,"priority","tralala"),C.deleteTodo(2),console.log(C),C.createTodo("Prepare Presentation","Create slides for the upcoming team meeting.","2023-08-20","High","To Do"),C.updateTodo(3,"title","Estimation"),console.log(C)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,