(()=>{"use strict";var n={735:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,":root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    margin: 10px 20px;\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}","",{version:3,sources:["webpack://./src/styling.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,oCAAoC;IACpC,oCAAoC;EACtC;;AAEF;IACI,SAAS;IACT,UAAU;IACV,8BAA8B;IAC9B,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,8CAA8C;IAC9C,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,uBAAuB;IACvB,WAAW;IACX,eAAe;IACf,QAAQ;IACR,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,UAAU;IACV,kCAAkC;IAClC,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,mCAAmC;IACnC,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,WAAW;AACf",sourcesContent:[":root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    margin: 10px 20px;\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}"],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var A=this[d][0];null!=A&&(a[A]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],d=0;d<n.length;d++){var A=n[d],s=o.base?A[0]+o.base:A[0],c=i[s]||0,l="".concat(s," ").concat(c);i[s]=c+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var A=o(n,r),s=0;s<i.length;s++){var c=t(i[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),d=t(565),A=t.n(d),s=t(216),c=t.n(s),l=t(589),p=t.n(l),u=t(735),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class f{constructor(n,e,t,o,r,i){this.id=n,this.title=e,this.details=t,this.duedate=o,this.priority=r,this.category="To Do",this.isDone=!1}}class C{constructor(){this.todoList=[],this.id=1,this.owner="Emma"}createTodo(n,e,t,o,r){return this.todoList.push(new f(this.id,n,e,t,o,r)),this.id++,this.todoList}updateTodo(n,e,t){return this.todoList.map((o=>{o.id==n&&(o[e]=t)})),this.todoList}deleteTodo(n){return this.todoList=this.todoList.filter((e=>e.id!==n)),this.todoList}}const g=new C,B=document.getElementById("todo-list"),h=document.getElementById("add-todo-button"),x=document.getElementById("modal"),I=document.getElementById("overlay"),b=document.getElementById("submit-todo"),v=document.getElementById("cancel"),y=document.getElementById("form-body");function E(){y.reset(),x.classList.remove("active"),I.classList.remove("active")}B.addEventListener("click",(function(n){"checkbox"==n.target.type&&console.log("You are my tralala")})),h.addEventListener("click",(function(){x.classList.add("active"),I.classList.add("active")})),v.addEventListener("click",E),b.addEventListener("click",(()=>{const n=document.getElementById("title").value,e=document.getElementById("description").value,t=document.getElementById("due-date").value,o=document.getElementById("prio").value,r=document.getElementById("category").value;var i;i=g.createTodo(n,e,t,o,r),B.innerHTML="",i.forEach((n=>{const e=function(n){const e=document.createElement("div"),t=document.createElement("input"),o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),d=document.createElement("button"),A=document.createElement("button");return B.appendChild(e),e.append(t,o,r,i,a,d,A),e.classList.add("item-card"),e.setAttribute("id",n.id),t.type="checkbox",o.classList.add("todo-title"),o.innerText=n.title,r.classList.add("todo-details"),r.innerText=n.details,i.classList.add("todo-due"),i.innerText="Due date: "+n.duedate,a.classList.add("todo-prio"),a.innerText="Priority: "+n.priority,d.classList.add("todo-edit"),d.innerText="Edit",A.classList.add("todo-delete"),A.innerText="Delete",e}(n);B.appendChild(e)})),E()}));const k=new C;k.createTodo("Finish Project Proposal","Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor.","2023-08-15","High","To Do"),k.createTodo("Buy Groceries","Purchase vegetables, fruits, and other essentials for the week.","2023-08-10","Medium","To Do"),k.updateTodo(2,"priority","tralala"),k.deleteTodo(2),console.log(k),k.createTodo("Prepare Presentation","Create slides for the upcoming team meeting.","2023-08-20","High","To Do"),k.updateTodo(3,"title","Estimation"),console.log(k)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,