(()=>{"use strict";var t={735:(t,e,o)=>{o.d(e,{Z:()=>a});var n=o(537),r=o.n(n),i=o(645),d=o.n(i)()(r());d.push([t.id,':root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    cursor: text;\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    cursor: text;\n    margin: 10px 20px;\n}\n\ndiv[contenteditable="true"]:focus{\n    border: 2px solid #e5e5e5; /* Light grey border */\n    background-color: #fff; /* White background color */\n    box-shadow: 0 0 5px rgba(255, 105, 180, 0.7); /* Pink shadow with transparency */\n    outline: none; /* Remove the default focus outline */\n  \n    /* Text color */\n    color: #333; /* Dark grey text color */\n  \n    /* Caret color (cursor color) */\n    caret-color: #ff69b4; /* Pink caret color */\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}',"",{version:3,sources:["webpack://./src/styling.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,oCAAoC;IACpC,oCAAoC;EACtC;;AAEF;IACI,SAAS;IACT,UAAU;IACV,8BAA8B;IAC9B,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,8CAA8C;IAC9C,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,uBAAuB;IACvB,WAAW;IACX,eAAe;IACf,QAAQ;IACR,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,UAAU;IACV,kCAAkC;IAClC,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,mCAAmC;IACnC,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,yBAAyB,EAAE,sBAAsB;IACjD,sBAAsB,EAAE,2BAA2B;IACnD,4CAA4C,EAAE,kCAAkC;IAChF,aAAa,EAAE,qCAAqC;;IAEpD,eAAe;IACf,WAAW,EAAE,yBAAyB;;IAEtC,+BAA+B;IAC/B,oBAAoB,EAAE,qBAAqB;AAC/C;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,WAAW;AACf",sourcesContent:[':root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-todo-button {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border-style: solid;\n    border-width: 1px;\n    background-color: white;\n    z-index: 10;\n    position: fixed;\n    top: 20%;\n    left: 20%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n}\n\n.todo-title {\n    cursor: text;\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    cursor: text;\n    margin: 10px 20px;\n}\n\ndiv[contenteditable="true"]:focus{\n    border: 2px solid #e5e5e5; /* Light grey border */\n    background-color: #fff; /* White background color */\n    box-shadow: 0 0 5px rgba(255, 105, 180, 0.7); /* Pink shadow with transparency */\n    outline: none; /* Remove the default focus outline */\n  \n    /* Text color */\n    color: #333; /* Dark grey text color */\n  \n    /* Caret color (cursor color) */\n    caret-color: #ff69b4; /* Pink caret color */\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}'],sourceRoot:""}]);const a=d},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var o="",n=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),n&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=t(e),n&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(t,o,n,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(n)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(d[s]=!0)}for(var A=0;A<t.length;A++){var c=[].concat(t[A]);n&&d[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),o&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=o):c[2]=o),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],o=t[3];if(!o)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function o(t){for(var o=-1,n=0;n<e.length;n++)if(e[n].identifier===t){o=n;break}return o}function n(t,n){for(var i={},d=[],a=0;a<t.length;a++){var s=t[a],A=n.base?s[0]+n.base:s[0],c=i[A]||0,l="".concat(A," ").concat(c);i[A]=c+1;var u=o(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=r(p,n);n.byIndex=a,e.splice(a,0,{identifier:l,updater:h,references:1})}d.push(l)}return d}function r(t,e){var o=e.domAPI(e);return o.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;o.update(t=e)}else o.remove()}}t.exports=function(t,r){var i=n(t=t||[],r=r||{});return function(t){t=t||[];for(var d=0;d<i.length;d++){var a=o(i[d]);e[a].references--}for(var s=n(t,r),A=0;A<i.length;A++){var c=o(i[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:t=>{var e={};t.exports=function(t,o){var n=function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,o)=>{t.exports=function(t){var e=o.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(o){!function(t,e,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,r&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,o)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,o),i.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.nc=void 0,(()=>{var t=o(379),e=o.n(t),n=o(795),r=o.n(n),i=o(569),d=o.n(i),a=o(565),s=o.n(a),A=o(216),c=o.n(A),l=o(589),u=o.n(l),p=o(735),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=d().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),e()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;class m{constructor(t,e,o,n,r,i){this.id=t,this.title=e,this.details=o,this.duedate=n,this.priority=r,this.category="To Do",this.isDone=!1}}class C{constructor(){this.todoList=[],this.id=1,this.owner="Emma"}createTodo(t,e,o,n,r){return this.todoList.push(new m(this.id,t,e,o,n,r)),this.id++,this.todoList}updateTodo(t,e,o){return this.todoList.map((n=>{n.id==t&&(n[e]=o)})),this.todoList}deleteTodo(t){return this.todoList=this.todoList.filter((e=>e.id!==t)),this.todoList}}const f=new C;new class{constructor(){this.todoListInstance=new C,this.todoList=document.getElementById("todo-list"),this.addTodoButton=document.getElementById("add-todo-button"),this.modal=document.getElementById("modal"),this.overlay=document.getElementById("overlay"),this.submitTodo=document.getElementById("submit-todo"),this.cancel=document.getElementById("cancel"),this.formNewTodo=document.getElementById("form-body"),this.addTodoButton.addEventListener("click",(()=>this.openModal())),this.cancel.addEventListener("click",(()=>this.closeModal())),this.submitTodo.addEventListener("click",(()=>{this.formTitle=document.getElementById("title").value,this.formDetails=document.getElementById("description").value,this.formDueDate=document.getElementById("due-date").value,this.formPriority=document.getElementById("prio").value,this.formCategory=document.getElementById("category").value,this.currentTodos=this.todoListInstance.createTodo(this.formTitle,this.formDetails,this.formDueDate,this.formPriority,this.formCategory),this.renderDashboard(this.currentTodos),this.closeModal()}))}openModal(){this.modal.classList.add("active"),this.overlay.classList.add("active")}closeModal(){this.formNewTodo.reset(),this.modal.classList.remove("active"),this.overlay.classList.remove("active")}createCard(t){return this.todoCard=document.createElement("div"),this.todoStatus=document.createElement("input"),this.todoTitle=document.createElement("div"),this.todoDetails=document.createElement("div"),this.todoDue=document.createElement("div"),this.todoPrio=document.createElement("div"),this.todoEdit=document.createElement("button"),this.todoDelete=document.createElement("button"),this.todoDelete.addEventListener("click",(t=>{this.deleteCard(t)})),this.todoList.appendChild(this.todoCard),this.todoCard.append(this.todoStatus,this.todoTitle,this.todoDetails,this.todoDue,this.todoPrio,this.todoEdit,this.todoDelete),this.todoCard.classList.add("item-card"),this.todoCard.setAttribute("data-itemid",t.id),this.todoStatus.type="checkbox",this.todoTitle.classList.add("todo-title"),this.todoTitle.innerText=t.title,this.todoDetails.classList.add("todo-details"),this.todoDetails.innerText=t.details,this.todoDue.classList.add("todo-due"),this.todoDue.innerText="Due date: "+t.duedate,this.todoPrio.classList.add("todo-prio"),this.todoPrio.innerText="Priority: "+t.priority,this.todoEdit.classList.add("todo-edit"),this.todoEdit.innerText="Edit",this.todoDelete.classList.add("todo-delete"),this.todoDelete.innerText="Delete",this.todoCard}deleteCard(t){if("todo-delete"==t.target.className){const e=t.target.closest(".item-card"),o=e.dataset.itemid;this.currentTodos.forEach((t=>{t.id==o&&(this.todoList.removeChild(e),this.currentTodos=this.todoListInstance.deleteTodo(t.id))}))}this.renderDashboard(this.currentTodos)}renderDashboard(t){this.todoList.innerHTML="",t.forEach((t=>{this.todoCard=this.createCard(t),this.todoList.appendChild(this.todoCard)}))}},f.createTodo("Finish Project Proposal","Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor. Complete the project proposal and submit it to the supervisor.","2023-08-15","High","To Do"),f.createTodo("Buy Groceries","Purchase vegetables, fruits, and other essentials for the week.","2023-08-10","Medium","To Do"),f.updateTodo(2,"priority","tralala"),f.deleteTodo(2),console.log(f),f.createTodo("Prepare Presentation","Create slides for the upcoming team meeting.","2023-08-20","High","To Do"),f.updateTodo(3,"title","Estimation"),console.log(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,